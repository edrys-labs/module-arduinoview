const e=navigator;var n=null,t=null,a=null,o=document.getElementById("sandbox")?.contentWindow,r={no:{},in:{},esc:{}},i=r.no,d="";const c=document.getElementById("connect");function l(e){o?o.postMessage({type:"hostinfo",data:JSON.stringify({connected:e})},"*"):console.warn("no sandbox")}function s(e,n=!0){if(o===e.source){window.send&&n&&window.send("receivedFromSandbox",e.data);var t=e.data;switch(u(1,t.toString()),t.type){case"raw":g(function(e){for(var n=new ArrayBuffer(e.length),t=new Uint8Array(n),a=0;a<e.length;a++)t[a]=e.charCodeAt(a);return n}(t.data));break;case"frame":g(m(t.data)),n||w(t.data);break;case"resize":window.resizeTo(t.data[0],t.data[1]);break;default:console.warn("unknown message type")}}}function w(e){try{o&&o.postMessage({type:"frame",data:e},"*")}catch(e){console.warn("sendToSandbox failed:",e.message)}}function u(e,n){0>=e&&console.log(n)}function f(e){if(e){!0===window.station&&window.send&&window.send("receive-buffer",e);var n=new Uint8Array(e);for(var t in u(3,String.fromCharCode.apply(null,n)),n){var a=n[t];u(5,String.fromCharCode(a)),i==r.in?1==a?(i=r.in,d=""):4==a?(u(1,"rx Serial Frame: "+d),w(d),d="",i=r.no):16==a?i=r.esc:d+=String.fromCharCode(a):i==r.esc?(d+="P",i=r.in):i==r.no&&1==a&&(i=r.in,d="")}}}function g(e){if(!1!==window.station){if(n){t||(t=n.writable.getWriter());try{t.write(e)}catch(e){console.warn("Failed to write data to the serial port:",e)}}else u(2,"not sent")}}function m(e){u(1,"tx Serial Frame: "+e);var n=new ArrayBuffer(2*e.length+2),t=new Uint8Array(n),a=0;t[0]=1,a++;for(var o=0;o<e.length;o++){var r=e.charCodeAt(o);1==r||4==r||16==r?(t[a]=16,t[a]=64^r,a+=2):(t[a]=r,a++)}return t[a]=4,n}async function y(){if(n){a=n.readable.getReader();try{for(;;){let{value:e,done:n}=await a.read();if(n)break;f(e)}}catch(e){console.warn("serial communication closed:",e.message)}finally{a.releaseLock()}}}async function b(){try{let t=document.getElementById("autoconnect");if(console.log("port:",t),n=null,t.checked){let t=await e.serial.getPorts();t.length>0&&(n=t[0])}if(n||(n=await e.serial.requestPort()),n){let e=parseInt(document.getElementById("baudrate").value);return await n.open({baudRate:e}),console.log("Connected to:",e,n.getInfo()),y(),setTimeout(function(){g(m("!!")),l(!0)},2e3),!0}}catch(e){console.log("There was an error:",e.message),await h()}return!1}async function h(){n&&(l(!1),t&&(await t.releaseLock(),await n.writable.close(),t=null),a&&(await a.releaseLock(),await n.readable.cancel(),a=null),await n.close(),n=null)}c&&(c.onclick=function(){c.disabled=!0;let e=window.document.getElementById("baudrate"),n=document.getElementById("autoconnect");if(!1===window.station){window.send("connect",null);return}"Connect"===c.innerText?b().then(t=>{c.innerText=t?"Disconnect":"Connect",c.disabled=!1,e.disabled=t,n.disabled=t,window?.update()}):h().then(()=>{c.innerText="Connect",c.disabled=!1,e.disabled=!1,n.disabled=!1,window?.update(),console.log("Disconnected",window.state)})});{let e=document.getElementById("reload");e&&(e.onclick=function(){let e=document.getElementById("sandbox");if(e){if(e.src="./sandbox.html",o=e.contentWindow,!1===window.station){window.send("reload",null);return}n&&(g(m("!!")),l(!0))}}),!1===window.station||window.addEventListener("message",s,!1),window.receiveFromSandBox=function(e,n){s({data:e,source:o},n)},window.onReceiveCallback=f,window.sendArrayBuffer=g}
//# sourceMappingURL=index.a2301e6f.js.map
